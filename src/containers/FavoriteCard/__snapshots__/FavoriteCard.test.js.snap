// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FavoriteCard should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FavoriteCard
    episode={
      Object {
        "image": "www.thisimgage.com",
        "showId": 921,
        "title": "Cake Boss",
        "tracked": Object {
          "favorites": true,
          "watched": true,
          "watchlist": true,
        },
      }
    }
    handleTracked={[MockFunction]}
    tracked={
      Array [
        Object {
          "id": 921,
          "image": "www.thisimgage.com",
          "title": "Cake Boss",
          "tracked": Object {
            "favorites": true,
            "watched": true,
            "watchlist": true,
          },
        },
      ]
    }
    tvShows={
      Array [
        Object {
          "id": 921,
          "image": "www.thisimgage.com",
          "title": "Cake Boss",
          "tracked": Object {
            "favorites": true,
            "watched": true,
            "watchlist": true,
          },
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <img
          src="www.thisimgage.com"
        />,
        <h3>
          Episode: 
          Cake Boss
        </h3>,
        <h5>
          Cake Boss
        </h5>,
        <button
          className="favorite-btn"
          onClick={[Function]}
          value="favorite"
        >
          Favorite
        </button>,
        <button
          className="watch-list-btn"
          onClick={[Function]}
          value="watchlist"
        >
          Watch List
        </button>,
        <button
          className="watched-btn"
          onClick={[Function]}
          value="watched"
        >
          Watched
        </button>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "src": "www.thisimgage.com",
        },
        "ref": null,
        "rendered": null,
        "type": "img",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Episode: ",
            "Cake Boss",
          ],
        },
        "ref": null,
        "rendered": Array [
          "Episode: ",
          "Cake Boss",
        ],
        "type": "h3",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Cake Boss",
        },
        "ref": null,
        "rendered": "Cake Boss",
        "type": "h5",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Favorite",
          "className": "favorite-btn",
          "onClick": [Function],
          "value": "favorite",
        },
        "ref": null,
        "rendered": "Favorite",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Watch List",
          "className": "watch-list-btn",
          "onClick": [Function],
          "value": "watchlist",
        },
        "ref": null,
        "rendered": "Watch List",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Watched",
          "className": "watched-btn",
          "onClick": [Function],
          "value": "watched",
        },
        "ref": null,
        "rendered": "Watched",
        "type": "button",
      },
    ],
    "type": "section",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <img
            src="www.thisimgage.com"
          />,
          <h3>
            Episode: 
            Cake Boss
          </h3>,
          <h5>
            Cake Boss
          </h5>,
          <button
            className="favorite-btn"
            onClick={[Function]}
            value="favorite"
          >
            Favorite
          </button>,
          <button
            className="watch-list-btn"
            onClick={[Function]}
            value="watchlist"
          >
            Watch List
          </button>,
          <button
            className="watched-btn"
            onClick={[Function]}
            value="watched"
          >
            Watched
          </button>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "src": "www.thisimgage.com",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Episode: ",
              "Cake Boss",
            ],
          },
          "ref": null,
          "rendered": Array [
            "Episode: ",
            "Cake Boss",
          ],
          "type": "h3",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Cake Boss",
          },
          "ref": null,
          "rendered": "Cake Boss",
          "type": "h5",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Favorite",
            "className": "favorite-btn",
            "onClick": [Function],
            "value": "favorite",
          },
          "ref": null,
          "rendered": "Favorite",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Watch List",
            "className": "watch-list-btn",
            "onClick": [Function],
            "value": "watchlist",
          },
          "ref": null,
          "rendered": "Watch List",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Watched",
            "className": "watched-btn",
            "onClick": [Function],
            "value": "watched",
          },
          "ref": null,
          "rendered": "Watched",
          "type": "button",
        },
      ],
      "type": "section",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
